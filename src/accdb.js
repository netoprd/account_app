var db=openDatabase('Accountdb','1.0','db for p2p accounting app', 2 * 1024 * 1024);

function initTables(){
db.transaction(function(tx) {
    tx.executeSql('CREATE TABLE IF NOT EXISTS chartOfAccount (id INTEGER PRIMARY KEY, accountCode VARCHAR, accountName VARCHAR, accountType VARCHAR, isHeader BOOLEAN DEFAULT FALSE, headerAccount VARCHAR, balance NUMBER)'); 
    
    tx.executeSql('CREATE TABLE IF NOT EXISTS journalDefination (id INTEGER PRIMARY KEY, approvedBy VARCHAR, approvedOn DATE, autoGenerated BOOLEAN DEFAULT FALSE, canAddMoreItems BOOLEAN DEFAULT FALSE, canRemoveMoreItems BOOLEAN DEFAULT FALSE, createdBy VARCHAR, createdOn DATE, dateOfMonth VARCHAR, journalDescription VARCHAR, remark VARCHAR, transactionDate DATE, transactionRef VARCHAR)'); 

    tx.executeSql('CREATE TABLE IF NOT EXISTS journalDefinationDeitail (id INTEGER PRIMARY KEY, journalDefination NUMBER, accountCode VARCHAR, amount NUMBER, canChangeAccountCode BOOLEAN DEFAULT FALSE, canChangeAmount BOOLEAN DEFAULT FALSE, canChangeIsCredited BOOLEAN DEFAULT FALSE, createdBy VARCHAR, createdOn DATE, compulsory BOOLEAN DEFAULT FALSE, isCredited BOOLEAN DEFAULT FALSE)'); 

  })
}

 export function savechartofaccount(datatosave) {
    initTables

    db.transaction(function(tx) {
        tx.executeSql('INSERT INTO chartOfAccount(accountCode, accountName, accountType, isHeader, headerAccount, balance) VALUES (?,?,?,?,?,?)',[datatosave.accountCode, datatosave.accountName, datatosave.accountType, datatosave.isHeader, datatosave.headerAccount, datatosave.balance], function(tx, results) {
          return results
        });
      });
      

}

  const dbData = {
    savechartofaccount 
  }
  export default dbData;